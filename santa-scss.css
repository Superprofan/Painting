$color-map: )
  'r' : red,
  'w' : white,
  'b' : black,
  'z' : beige,
  'g' : green,
  't' : transparent
);

$pixel-size: 10px !default;

$art: (
  santa: (
    (t,r,r,r,r,r,t,t)
    (w,t,w,w,w,w,t,t)
    (t,t,z,b,z,b,t,t)
    (t,t,z,z,z,z,t,t)
    (t,g,r,r,r,r,g,t)
    (t,g,r,r,r,r,g,t)
    (t,z,r,r,r,r,z,t)
    (b,b,b,t,t,b,b,b)
  ),
);

@function pixelize($matrix, $size){
    $l: length($matrix); // length of the entire
    $sh: ''; // shadows list
    $i: $l; // length of the line


    @for $i from 1 through $l{
         $row: nth($matrix,$i); //

         @for $j from 1 through length($row){
             $item: nth($row,$j);

             @if map-has-key($color-map, $item) {
               $sh:  $sh + ($j*$size) + ' ' + ($i*$size) + ' ' + map-get($color-map, $item);
             } @else {
               @warn 'there is no color specified in "$pixel-color-map" for: "#{$item}"';
             }
             @if not ($j == length($row) and $i == $l) {
          $sh: $sh + ',';
        }
      }
    }

    @return unquote($sh);
}

@mixin style-item($matrix, $size){
  position: relative; // pixels stack next to each other

  // set width & height of icon based on size of pixels
  width:($size * length(nth($matrix,1)));
  height:($size * length($matrix));

  &:after{
    content: '';

    // position everything from the top left corner
    position: absolute;
    top: (-$size);
    left: (-$size);
    width: $size;
    height: $size;

    // this is where we make the stitch
    box-shadow: pixelize($matrix,$size);
  }
}
// Page styling
body {
  background: #97f0fa;
}

.santa-art{
  list-style: none;
  margin: 3em auto;
  max-width: 800px;
  padding: 0;
  text-align: center;
  width: 100%;

  li {
    display: inline-block;
    margin: 2em;
  }

   @each $key, $value in $art{
    &--#{$key}{
      @include style-item($value, $pixel-size);
    }
  }
}

// just styling the link to the post :)

a {
  text-align: center;
  display: block;
  width: 100%;
  color: #000;
  font-family: 'Open Sans', sans-serif;
}
